00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 2/8/2018 3:58:32 PM

00000000 			      1  *-----------------------------------------------------------
00000000 			        2  * Title      :Lab 3 
00000000			        3  * Written by :Bryson O'Neill & Domenico Galati
00000000 			        4  * Date       :2/8/18
00000000			        5  * Description:
00000000 			        6  *-----------------------------------------------------------
00001000			        7        ORG    $1000
00001000			        8        START:  
00001000 			        9        AGAIN
00001000  4240		    10      CLR D0	                                              ;CLEARS REGISTERS BEFORE LOOP BEGINS
00001002  4241		    11      CLR D1	                                              ;CLEARS REGISTERS BEFORE LOOP BEGINS
00001004  4244 		    12      CLR D4 	                                              ;CLEARS REGISTERS BEFORE LOOP BEGINS
00001006  4245		    13      CLR D5 	                                              ;CLEARS REGISTERS BEFORE LOOP BEGINS
00001008  4246		    14      CLR D6 	                                              ;CLEARS REGISTERS BEFORE LOOP BEGINS
0000100A  103C 000E		15      MOVE.B #14, D0 	                                      ;TELLS TRAP TO PRINT THE STRING
0000100E  43F9        16      LEA MW, A1 	                                          ;DECLARES WHICH STRING TO PRINT
00001014  4E4F		    17      TRAP #15 	                                            ;PRINTS STRING
00001016  103C 0004		18      MOVE.B #4, D0 	                                      ;TELLS TRAP TO TAKE USER INPUT
0000101A  4E4F 		    19      TRAP #15 	                                            ;TAKES USER INPUT
0000101C  B27C 0000		20      CMP #0, D1 	                                          ;CHECKS IF D1 IS GREATER THAN 0
00001020  6BDE 		    21      BMI AGAIN 	                                          ;IF A NEGATIVE # IS ENTERED, THE PROGRAM WILL RESET
00001022  2801		    22      MOVE.L D1, D4 	                                      ;MOVES USER INPUT INTO D4
00001024  B87C 0000 	23      CMP #0, D4 		                                        ;CHECKS IF D4 IS EQUAL TO 0
00001028  6700 0040		24      BEQ DONE 	                                            ;IF USER ENTERS 0 CODE WILL BRANCH AND END. IF NOT 0, THE PROGRAM WILL CONTINUE.
0000102C			        25  
0000102C  103C 000E 	26      MOVE.B #14, D0 		                                    ;TELLS TRAP TO PRINT THE STRING
00001030  43F9      	27      LEA NW, A1 		                                        ;DECLARES WHICH STRING TO PRINT
00001036  4E4F       	28      TRAP #15 		                                          ;PRINTS STRING
00001038  103C 0004		29      MOVE.B #4, D0 		                                    ;TELLS TRAP TO TAKE USER INPUT
0000103C  4E4F		    30      TRAP #15 		                                          ;TAKES USER INPUT
0000103E  B27C 0000		31      CMP #0, D1 		                                        ;CHECKS IF D1 IS GREATER THAN 0
00001042  6BBC		    32      BMI AGAIN 		                                        ;IF A NEGATIVE # IS ENTERED, THE PROGRAM WILL RESET
00001044  2A013		    33      MOVE.L D1, D5 		                                    ;MOVES USER INPUT INTO D5
00001046 			        34  
00001046  6100 0018   35      BSR COMP		                                          ;BRANCHES PROGRAM TO COMPUTATION
0000104A 			        36      
0000104A  103C 000E		37      MOVE.B #14, D0		                                    ;TELLS TRAP TO PRINT THE STRING
0000104E  43F9       	38      LEA YW, A1 		                                        ;DECLARES WHICH STRING TO PRINT
00001054  4E4F		    39      TRAP #15 		                                          ;PRINTS STRING
00001056  103C 0003 	40      MOVE.B #3, D0 		                                    ;TELLS TRAP TO PRINT THE RESULT AS A NUMBER
0000105A  2206		    41      MOVE.L D6, D1 		                                    ;MOVES THE RESULT INTO D1
0000105C  4E4F		    42      TRAP #15		                                          ;PRINTS NUMBER
0000105E			        43  
0000105E  61A0		    44      BSR AGAIN 		                                        ;TELLS PROGRAM TO RETURN TO BEGINNING
00001060			        45      
00001060  1C3C 0005 	46      COMP   MOVE.B #5, D6                                	;COMPUTATION & MOVES THE #5 INTO D6
00001064  CBC4		    47      MULS D4, D5 		                                      ;MULTIPLIES M&N TOGETHER AND STORES IT INTO D5
00001066  DC85		    48      ADD.L D5, D6 		                                      ;ADDS 5 TO THE D5 REGISTER AND STORES IT INTO D6
00001068  4E75		    49      RTS 			                                            ;RETURN FROM SUBROUTINE
0000106A 			        50      
0000106A  			      51      DONE
0000106A  103C 000E 	52      MOVE.B #14, D0 		                                    ;TELLS TRAP TO PRINT THE STRING
0000106E  43F9       	53      LEA EW, A1 		                                        ;DECLARES WHICH STRING TO PRINT
00001074  4E4F		    54      TRAP #15 		                                          ;PRINTS STRING
00001076 			        55  
00001076            	56      MW  DC.B CR,LF,'Enter a positive integer for M: ',0 	;STRING FOR M
00001099             	57      NW  DC.B 'Enter a positive integer for N: ',0		      ;STRING FOR N
000010BA             	58      YW  DC.B 'Y(M,N)= ',0 			                          ;STRING FOR Y
000010C3            	59      CR  EQU $0D 				                                  ;CARRIAGE RETURN
000010C3              60      LF  EQU $0A 				                                  ;LINE FEED
000010C3              61      EW  DC.B 'THE END!',0 			                          ;STRING FOR THE END
000010CC 			        62      
000010CC			        63      END    START      	 			                            ;last line of source
